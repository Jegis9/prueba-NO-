"""
Django settings for Sistema project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
# from .bd import MYSQL
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

import cloudinary
import cloudinary.uploader
import cloudinary.api

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = config('SECRET_KEY')
# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
# DEBUG = True

# ALLOWED_HOSTS = []
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='').split(' ')


# ['127.0.0.1','localhost',"prueba-no.onrender.com"]
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Aplicaciones.Administrativo',
    'Aplicaciones.user',
    'Aplicaciones.Publico',
    'Aplicaciones.emergenciasRecibidas',
    'Aplicaciones.lUsuarios',
    'Aplicaciones.Vehiculos',
    'Aplicaciones.EPP',
    'Aplicaciones.Herramientas',
    'Aplicaciones.Estadisticas',
    'Aplicaciones.Insumos',
    'Aplicaciones.Emergencias',
    'Aplicaciones.CV',
    'crispy_forms',
    'crispy_bootstrap5',
    'requests',
    'storages',
    'cloudinary', 

   
]



CRISPY_TEMPLATE_PACK = 'bootstrap5'

MIDDLEWARE = [

    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]



ROOT_URLCONF = 'Sistema.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'Sistema', 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Sistema.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = MYSQL
# DATABASES["default"] = dj_database_url.parse("postgresql://databaserenderbomberos_user:3QvDV6nAvDabKK3wkxmeGKUvZL5J5QvA@dpg-csm1ag8gph6c73abbvi0-a.oregon-postgres.render.com/databaserenderbomberos")
import dj_database_url
from decouple import config

# DATABASES = {
#     'default': dj_database_url.parse(
#         config('DATABASE_URL')  # 'postgresql://user:password@host:port/database'
#     )
# }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'pruebaBMT',
#         'USER': 'postgres',
#         'PASSWORD': 'admin123',
#         'HOST': 'localhost',
#         'PORT': '5432',  # Puedes establecer un valor por defecto
#     }
# }

DATABASES = {
    'default': dj_database_url.parse('DATABASE_URL')
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'es-gt'

TIME_ZONE = 'America/Guatemala'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# Configuración de archivos estáticos
STATIC_URL = 'static/'
STATIC_DIIRS = [ BASE_DIR / 'static' ]
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# Configuración de WhiteNoise

# Archivos multimedia
MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

#Cuando el usuario se autentique lo redigira a home (provisional hasta ahora)
# LOGIN_REDIRECT_URL = 'home'
# Redirigira al usuario a login cuando desee ingresar a una seccion donde debe de estar autenticado
LOGIN_URL = '/login/'
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_BACKEND=config('EMAIL_BACKEND')
EMAIL_HOST=config('EMAIL_HOST')
EMAIL_PORT=config('EMAIL_PORT')
EMAIL_USE_TLS=config('EMAIL_USE_TLS')
EMAIL_HOST_USER =config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD =config('EMAIL_HOST_PASSWORD')

CLOUNDNAME=config('CLOUND_NAME')
APIKEY=config('API_KEY')
APISECRET=config('API_SECRET')

cloudinary.config( 
    cloud_name = CLOUNDNAME,
    api_key = APIKEY,
    api_secret = APISECRET
)
DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'